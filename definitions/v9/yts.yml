---
id: yts
name: YTS
description: "YTS is a Public torrent site specialising in HD movies of small size"
type: public
language: en-US
encoding: UTF-8
requestDelay: 2.5 # 2.5 requests per second (2 causes problems)
links:
  # dont forget to update the details, download and poster replace args
  - https://yts.mx/
  - https://yts.unblockit.boo/
  - https://yts.unblockninja.com/
  - https://yts.mrunblock.guru/
legacylinks:
  - https://yts.ag/
  - https://yts.am/
  - https://yts.lt/
  - https://yts.unblockit.cam/
  - https://yts.nocensor.biz/
  - https://yts.unblockit.day/
  - https://yts.unblockit.llc/
  - https://yts.unblockit.blue/
  - https://yts.unblockit.name/
  - https://yts.nocensor.sbs/
  - https://yts.unblockit.ist/
  - https://yts.unblockit.bet/
  - https://yts.unblockit.cat/
  - https://yts.unblockit.nz/
  - https://yts.nocensor.world/
  - https://yts.unblockit.page/
  - https://yts.unblockit.pet/
  - https://yts.nocensor.lol/
  - https://yts.unblockit.ink/
  - https://yts.nocensor.art/
  - https://yts.unblockit.bio/

caps:
  categorymappings:
    # note: the API does not support searching with categories, so these are dummy ones for torznab compatibility
    # we map these newznab cats with the returned quality value in the releases routine.
    - {id: 45, cat: Movies/HD, desc: "Movies/x264/720p"}
    - {id: 44, cat: Movies/HD, desc: "Movies/x264/1080p"}
    - {id: 46, cat: Movies/UHD, desc: "Movies/x264/2160p"}
    - {id: 47, cat: Movies/3D, desc: "Movies/x264/3D"}

  modes:
    search: [q]
    movie-search: [q, imdbid]

settings: []

search:
  paths:
    - path: api/v2/list_movies.json
      response:
        type: json

  inputs:
    # ignore ' (e.g. search for america's Next Top Model)
    query_term: "{{ if .Query.IMDBID }}{{ .Query.IMDBID }}{{ else }}{{ .Keywords }}{{ end }}"
    # without this the API sometimes returns nothing
    limit: 50
    sort: date_added
  keywordsfilters:
    - name: re_replace
      args: ["[^\\w]+", " "]

  rows:
    selector: data.movies
    attribute: torrents
    multiple: true
    # bug at YTS can return movie_count > 0 and no movie torrents #12598
    missingAttributeEqualsNoResults: true
    count:
      selector: data.movie_count

  fields:
    _quality:
      selector: quality
    category:
      selector: quality
      case:
        "720p": 45
        "1080p": 44
        "2160p": 46
        "3D": 47
        "*": 45
    _type:
      selector: type
    year:
      selector: ..year
    title_default:
      selector: ..title
      filters:
        - name: append
          args: " ({{ .Result.year }})"
    title_optional:
      selector: ..title_long
      optional: true
    title:
      text: "{{ if .Result.title_optional }}{{ .Result.title_optional }}{{ else }}{{ .Result.title_default }}{{ end }}"
      filters:
        - name: replace
          args: [":", ""]
        # append type: BRRip or WEBRip, resolves #3558 via #4577
        - name: append
          args: " {{ .Result._quality }} {{ if eq .Result._type \"web\" }}WEBRip{{ else }}BRRip{{ end }} -YTS"
    details:
      selector: ..url
      filters:
        - name: re_replace
          args: ["^https?:\\/\\/yts\\.mx\\/", "{{ .Config.sitelink }}"] # fix for 12494
    download:
      selector: url
      filters:
        - name: re_replace
          args: ["^https?:\\/\\/yts\\.mx\\/", "{{ .Config.sitelink }}"] # fix for 12494
    infohash:
      selector: hash
    poster:
      selector: ..large_cover_image
      filters:
        - name: re_replace
          args: ["^https?:\\/\\/yts\\.mx\\/", "{{ .Config.sitelink }}"] # fix for 12494
    imdbid:
      selector: ..imdb_code
    date:
      selector: date_uploaded_unix
    size:
      selector: size_bytes
    seeders:
      selector: seeds
    leechers:
      selector: peers
    downloadvolumefactor:
      text: 0
    uploadvolumefactor:
      text: 1
# json api v2
