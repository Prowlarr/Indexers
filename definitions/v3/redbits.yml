---
id: redbits
name: RedBits
description: "RedBits is a SPANISH site for classic content"
language: es-ES
type: private
encoding: UTF-8
links:
  - https://red-bits.com/

caps:
  categorymappings:
    - {id: 1, cat: Movies, desc: "Películas"}
    - {id: 2, cat: TV, desc: "Series"}
    - {id: 6, cat: TV/Documentary, desc: "Documentales"}
    - {id: 7, cat: TV/Sport, desc: "Deportes"}

  modes:
    search: [q]
    tv-search: [q, season, ep, imdbid, tvdbid]
    movie-search: [q, imdbid, tmdbid]

settings:
  - name: username
    type: text
    label: Username
  - name: password
    type: password
    label: Password
  - name: freeleech
    type: checkbox
    label: Search freeleech only
    default: false
  - name: sort
    type: select
    label: Sort requested from site
    default: created_at
    options:
      created_at: created
      seeders: seeders
      size: size
      name: title
  - name: type
    type: select
    label: Order requested from site
    default: desc
    options:
      desc: desc
      asc: asc

login:
  path: login
  method: form
  form: form[action$="/login"]
  inputs:
    username: "{{ .Config.username }}"
    password: "{{ .Config.password }}"
    remember: on
  selectorinputs:
    _token:
      selector: input[name="_token"]
      attribute: value
  error:
    - selector: div#ERROR_COPY
#    test:
#      path: /
#      selector: a[href$="/logout"]

search:
  paths:
    - path: torrents/filter
  keywordsfilters:
    - name: re_replace
      args: ["(?i)\\bS0*(\\d+)\\b", "T$1"]
  inputs:
    $raw: "{{ range .Categories }}categories[]={{.}}&{{end}}"
    search: "{{ if .Query.IMDBID }}{{ else }}{{ .Keywords }}{{ end }}" # for dashboard imdbid search
    description: ""
    keywords: ""
    uploader: ""
    imdb: "{{ .Query.IMDBIDShort }}"
    tvdb: "{{ .Query.TVDBID }}"
    tmdb: "{{ .Query.TMDBID }}"
    mal: ""
    igdb: ""
    start_year: ""
    end_year: ""
    sorting: "{{ .Config.sort }}"
    direction: "{{ .Config.type }}"
    qty: 100
    page: 0
    view: list
    freeleech: "{{ if .Config.freeleech }}1{{ else }}{{ end }}"

  rows:
    selector: table > tbody > tr

  fields:
    category:
      selector: a[href*="/categories/"]
      attribute: href
      filters:
        - name: regexp
          args: "/categories/(\\d+)"
    title_vose:
      selector: a.view-torrent:contains("VOSE")
      optional: true
      filters:
        - name: re_replace
          args: ["(?i)bdfull", "BluRay"] # BDfull  -> BluRay
        - name: re_replace
          args: ["(?i)RedBits", ""] # Delete RedBits
        - name: append
          args: " English" # Add english to fix Sonarr/Radarr language
        - name: re_replace
          args: ["\\[|\\]", " "]
        - name: re_replace
          args: ["  ", " "]
        - name: re_replace
          args: ["(?i)T(\\d{1,2})\\b", "S$1"]
    title_notvose:
      selector: a.view-torrent:not(:contains("VOSE"))
      optional: true
      filters:
        - name: re_replace
          args: ["(?i)bdfull", "BluRay"] # BDfull  -> BluRay
        - name: re_replace
          args: ["(?i)RedBits", ""] # Delete RedBits
        - name: append
          args: " Spanish" # Add spanish to fix Sonarr/Radarr language
        - name: re_replace
          args: ["\\[|\\]", " "]
        - name: re_replace
          args: ["  ", " "]
        - name: re_replace
          args: ["(?i)T(\\d{1,2})\\b", "S$1"]
    title:
      text: "{{ if .Result.title_vose }}{{ .Result.title_vose }}{{ else }}{{ .Result.title_notvose }}{{ end }}"
    download:
      selector: a[href*="/download/"]
      attribute: href
    details:
      selector: a.view-torrent
      attribute: href
    poster:
      selector: div.torrent-poster img
      attribute: src
      filters:
        - name: replace
          args: ["&w=52&h=80", "&w=180&h=270"] # for display on dashboard
        - name: replace
          args: ["https://images.weserv.nl/?url=https://via.placeholder.com/52x80&w=180&h=270", ""]
    size:
      selector: td:nth-last-child(4)
    seeders:
      selector: td:nth-last-child(3)
    leechers:
      selector: td:nth-last-child(2)
    grabs:
      selector: td:nth-last-child(1)
    imdbid:
      selector: a[href*="imdb.com/title/tt"]
      attribute: href
    tmdbid:
      selector: a[href*="themoviedb.org/movie/"]
      attribute: href
    date:
      selector: time
      filters:
        # translations for Turkish|Estonian|Danish|Italian|Polish|Norwegian|Portuguese|Czech|Russian|Romanian|Spanish|French|German|Bulgarian|Dutch|Chinese|Japanese|Swedish
        - name: re_replace
          args: ["(?i)(önce|tagasi|geleden|fa|temu|siden|há|atrás|nazpět|назад|acum|în urmă|hace|il y a|vor|преди|前|sedan)", " ago"]
        - name: re_replace
          args: ["(?i)(saniye|sekundit|sekunder|secondi|sekund|segundos|sekundami|секунд|secunde|secondes|Sekunden|секунди|seconden|秒前)", "seconds"]
        - name: re_replace
          args: ["(?i)(minutit|minutter|minuti|minuty|minutos|минуты|минут|Minuten|минути|minuten|minuter)", "minutes"]
        - name: re_replace
          args: ["(?i)(dakika|minut|minuto|minuta|minutt|минута|Minute|minuut|分钟|分)", " minute"]
        - name: re_replace
          args: ["(?i)(tundi|timer|ore|godziny|horas|hodiny|hoden|часа|часов|ore|heures|Stunden|timmar)", "hours"]
        - name: re_replace
          args: ["(?i)(saat|tund|time|ora|godzina|hora|hodina|час|oră|heure|Stunde|uur|小时|時間|timme)", " hour"]
        - name: re_replace
          args: ["(?i)(päeva|dage|giorni|dni|dias|dny|дня|дней|zile|días|jours|Tagen|дни|dagen|dagar)", "days"]
        - name: re_replace
          args: ["(?i)(gün|päev|dag|giorno|dzień|dia|den|день|zi|día|jour|Tag|ден|天|日)", " day"]
        - name: re_replace
          args: ["(?i)(nädalat|uger|settimane|tygodnie|uker|semanas|týdny|недели|недель|săptămâni|semaines|Wochen|седмици|weken|veckor)", "weeks"]
        - name: re_replace
          args: ["(?i)(hafta|nädal|uge|settimana|tydzień|uke|semana|týden|неделю|săptămână|semaine|Woche|седмица|周|週間|vecka)", " week"]
        - name: re_replace
          args: ["(?i) (ay)", "month"]
        - name: re_replace
          args: ["(?i)(kuud|måneder|mesi|miesiące|meses|měsíce|месяца|месяцев|luni|meses|mois|Monaten|месеца|maanden|månader)", "months"]
        - name: re_replace
          args: ["(?i)(kuu|måned|mese|miesiąc|mês|měsíc|месяц|lună|mes|Monat|месец|maand|个月|ヶ月|månad)", " month"]
        - name: re_replace
          args: ["(?i)(aastat|anni|lata|anos|roky|года|ani|años|ans|Jahren|години)", " years"]
        - name: re_replace
          args: ["(?i)(yil|aasta|år|anno|rok|ano|год|año|Jahr|година|jaar|年)", " year"]
        - name: re_replace
          args: ["(?i) (an)", "year"]
        - name: re_replace
          args: ["(?i)(För |und)", ""] # Misc removals
        - name: timeago
    downloadvolumefactor:
      case:
        i[class*="fa-id-badge text-orange"]: 0 # 24 Hour FreeLeech From BON Store
        i[class*="fa-trophy text-purple"]: 0 # Special FreeLeech For Certain User Groups
        i[class*="fa-star text-bold"]: 0 # Freeleech From Token
        i[class*="fa-coins text-bold"]: 0 # Freeleech From Token
        i[class*="fa-globe text-blue"]: 0 # Global Freeleech
        i[class*="fa-star text-gold"]: 0 # Freeleech
        i[class*="fa-certificate text-pink"]: 0 # Featured Torrent
        "*": 1
    uploadvolumefactor:
      case:
        i[class*="fa-gem text-green"]: 2 # Single Torrent Double Upload
        i[class*="fa-globe text-green"]: 2 # Global Double Upload
        i[class*="fa-certificate text-pink"]: 2 # Featured Torrent
        "*": 1
    minimumseedtime:
      # 4 days (as seconds = 4 x 24 x 60 x 60)
      text: 345600
# UNIT3D 5.1.0
