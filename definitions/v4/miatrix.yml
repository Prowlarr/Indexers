---
id: miatrix-yml
name: Miatrix
description: "Miatrix is a Semi-Private Usenet Indexer with decent GERMAN content"
language: en-US
type: semi-private
allowdownloadredirect: true
protocol: usenet
encoding: UTF-8
links:
  - https://miatrix.com

caps:
  # These can typically be found at {site}/api?t=caps
  categorymappings:
    - {id: 1000, cat: Console, descr: Console}
    - {id: 1110, cat: Console/3DS, descr: Console/3DS}
    - {id: 1010, cat: Console/NDS, descr: Console/NDS}
    - {id: 1090, cat: Console/Other, descr: Console/Other}
    - {id: 1120, cat: Console/PS Vita, descr: Console/PS Vita}
    - {id: 1080, cat: Console/PS3, descr: Console/PS3}
    - {id: 1100, cat: Console/PS4, descr: Console/PS4}
    - {id: 1180, cat: Console/PS4, descr: Console/PS4}
    - {id: 1020, cat: Console/PSP, descr: Console/PSP}
#    - {id: 1035, cat: Console/Switch, descr: Console/Switch}
    - {id: 1030, cat: Console/Wii, descr: Console/Wii}
    - {id: 1130, cat: Console/WiiU, descr: Console/WiiU}
    - {id: 1060, cat: Console/Wiiware, descr: Console/WiiWare/VC}
    - {id: 1070, cat: Console/XBox 360 DLC, descr: Console/XBOX 360 DLC}
    - {id: 1040, cat: Console/XBox, descr: Console/Xbox}
    - {id: 1050, cat: Console/XBox 360, descr: Console/Xbox 360}
    - {id: 1140, cat: Console/XBox One, descr: Console/Xbox One}
    - {id: 2000, cat: Movies, descr: Movies}
    - {id: 2050, cat: Movies/3D, descr: Movies/3D}
    - {id: 2060, cat: Movies/BluRay, descr: Movies/BluRay}
    - {id: 2070, cat: Movies/DVD, descr: Movies/DVD}
    - {id: 2010, cat: Movies/Foreign, descr: Movies/Foreign}
    - {id: 2040, cat: Movies/HD, descr: Movies/HD}
    - {id: 2020, cat: Movies/Other, descr: Movies/Other}
    - {id: 2030, cat: Movies/SD, descr: Movies/SD}
    - {id: 2045, cat: Movies/UHD, descr: Movies/UHD}
    - {id: 3000, cat: Audio, descr: Audio}
    - {id: 3030, cat: Audio/Audiobook, descr: Audio/Audiobook}
    - {id: 3060, cat: Audio/Foreign, descr: Audio/Foreign}
    - {id: 3040, cat: Audio/Lossless, descr: Audio/Lossless}
    - {id: 3010, cat: Audio/MP3, descr: Audio/MP3}
    - {id: 3050, cat: Audio/Other, descr: Audio/Other}
    - {id: 3020, cat: Audio/Video, descr: Audio/Video}
    - {id: 4000, cat: PC, descr: PC}
    - {id: 4010, cat: PC/0day, descr: PC/0day}
    - {id: 4050, cat: PC/Games, descr: PC/Games}
    - {id: 4020, cat: PC/ISO, descr: PC/ISO}
    - {id: 4030, cat: PC/Mac, descr: PC/Mac}
    - {id: 4070, cat: PC/Mobile-Android, descr: PC/Mobile-Android}
    - {id: 4040, cat: PC/Mobile-Other, descr: PC/Mobile-Other}
    - {id: 4060, cat: PC/Mobile-iOS, descr: PC/Mobile-iOS}
    - {id: 5000, cat: TV, descr: TV}
    - {id: 5070, cat: TV/Anime, descr: TV/Anime}
    - {id: 5080, cat: TV/Documentary, descr: TV/Documentary}
    - {id: 5020, cat: TV/Foreign, descr: TV/Foreign}
    - {id: 5040, cat: TV/HD, descr: TV/HD}
    - {id: 5050, cat: TV/Other, descr: TV/Other}
    - {id: 5030, cat: TV/SD, descr: TV/SD}
    - {id: 5060, cat: TV/Sport, descr: TV/Sport}
    - {id: 5045, cat: TV/UHD, descr: TV/UHD}
    - {id: 5010, cat: TV/WEB-DL, descr: TV/WEB-DL}
    - {id: 6000, cat: XXX, descr: XXX}
    - {id: 6010, cat: XXX/DVD, descr: XXX/DVD}
    - {id: 6060, cat: XXX/ImageSet, descr: XXX/ImgSet}
    - {id: 6070, cat: XXX/Other, descr: XXX/Other}
    - {id: 6050, cat: XXX/Pack, descr: XXX/Pack}
    - {id: 6020, cat: XXX/WMV, descr: XXX/WMV}
    - {id: 6030, cat: XXX/XviD, descr: XXX/XviD}
    - {id: 6040, cat: XXX/x264, descr: XXX/x264}
    - {id: 7000, cat: Books, descr: Books}
    - {id: 7030, cat: Books/Comics, descr: Books/Comics}
    - {id: 7020, cat: Books/EBook, descr: Books/Ebook}
    - {id: 7060, cat: Books/Foreign, descr: Books/Foreign}
    - {id: 7010, cat: Books/Mags, descr: Books/Mags}
    - {id: 7050, cat: Books/Other, descr: Books/Other}
    - {id: 7040, cat: Books/Technical, descr: Books/Technical}
    - {id: 8000, cat: Other, descr: Other}
    - {id: 8020, cat: Other/Hashed, descr: Other/Hashed}
    - {id: 8010, cat: Other/Misc, descr: Other/Misc}

  modes:
    # Be sure to update the search inputs
    search: [q] # group is supported by the indexer but not Cardigann/Prowlarr
    tv-search: [q, rid, tvdbid, tvmazeid, season, ep]
    movie-search: [q, imdbid, genre]

# The below are standard Newznab values and likely do not need modification
settings:
  - name: apikey
    type: text
    label: Site API Key

search:
  ignoreblankinputs: true
  paths:
    - path: /api/
      response:
        type: xml
        attribute: attributes

  error:
    - selector: error
      message:
        selector: error
        attribute: description

  inputs:
    t: "{{ .Query.Type }}"
    apikey: "{{ .Config.apikey }}"
    q: "{{ if or (.Query.TVRageID) (.Query.TVDBID) (.Query.IMDBIDShort) (.Query.TMDBID) (.Query.TraktId) (.Query.Album) (.Query.Artist) (.Query.Label) (.Query.Year) (.Query.Genre) }}{{ else }}{{ .Keywords }}{{ end }}"
    rid: "{{ if .Query.TVRageID }}{{ .Query.TVRageID }}{{ else }}{{ end }}"
    tmdbid: "{{ if .Query.TMDBID }}{{ .Query.TMDBID }}{{ else }}{{ end }}"
    tvdbid: "{{ if .Query.TVDBID }}{{ .Query.TVDBID }}{{ else }}{{ end }}"
    imdbid: "{{ if .Query.IMDBIDShort }}{{ .Query.IMDBIDShort }}{{ else }}{{ end }}"
    traktid: "{{ if .Query.TraktId }}{{ .Query.TraktId }}{{ else }}{{ end }}"
    season: "{{ if .Query.Season }}{{ .Query.Season }}{{ else }}{{ end }}"
    ep: "{{ if .Query.Ep }}{{ .Query.Ep }}{{ else }}{{ end }}"
    album: "{{ if .Query.Album }}{{ .Query.Album }}{{ else }}{{ end }}"
    artist: "{{ if .Query.Artist }}{{ .Query.Artist }}{{ else }}{{ end }}"
    label: "{{ if .Query.Label }}{{ .Query.Label }}{{ else }}{{ end }}"
    genre: "{{ if .Query.Genre }}{{ .Query.Genre }}{{ else }}{{ end }}"
    year: "{{ if .Query.Year }}{{ .Query.Year }}{{ else }}{{ end }}"
    cat: "{{ join .Categories \",\" }}"
    $raw: "&extended=1"

  rows:
    selector: rss > channel > item

  fields:
    title:
      selector: title
    details:
      selector: comments
    date:
      selector: pubDate
    download:
      selector: link
    description:
      selector: description
    tvdbid:
      selector: tvdbid
    imdbid:
      selector: imdb
    tmdbid:
      selector: tmdb
    traktid:
      selector: traktid
      optional: true
    genre:
      selector: genre
      optional: true
    year:
      selector: year
      optional: true
    category:
      selector: attr[name="category"]:nth-of-type(1)
      attribute: value
    category:
      optional: true
      selector: attr[name="category"]:nth-of-type(2)
      attribute: value
    size:
      selector: attr[name="size"]
      attribute: value
    grabs:
      selector: attr[name="grabs"]
      attribute: value
    poster:
      selector: attr[name="poster"]
      attribute: value
    files:
      selector: attr[name="files"]
      attribute: value
      optional: true
    coverurl:
      selector: attr[name="coverurl"]
      attribute: value
download:
  error:
    - selector: error
      message:
        selector: error
        attribute: description
# newznab standard
