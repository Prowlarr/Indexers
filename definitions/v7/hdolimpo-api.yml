---
id: hdolimpo-api
name: HD-Olimpo (API)
description: "HD-Olimpo is a SPANISH site for HD content"
language: es-ES
type: private
encoding: UTF-8
links:
  - https://hd-olimpo.club/
legacylinks:
  - https://hdolimpo.co/

caps:
  categorymappings:
    - {id: 1, cat: Movies, desc: "Películas"}
    - {id: 2, cat: TV, desc: "Series"}
    - {id: 3, cat: Audio, desc: "Música"}
    - {id: 4, cat: TV/Documentary, desc: "Documentales"}

  modes:
    search: [q]
    tv-search: [q, season, ep, imdbid, tvdbid, tmdbid]
    movie-search: [q, imdbid, tmdbid]
    music-search: [q]
    book-search: [q]

settings:
  - name: apikey
    type: text
    label: APIKey
  - name: info_key
    type: info
    label: About your API key
    default: "Find or Generate a new API Token by accessing your account <i>My configuration / Mi configuración => Secutiy / Seguridad</i> page and clicking on the <b>API Token</b> tab."
  - name: freeleech
    type: checkbox
    label: Search freeleech only
    default: false
  - name: sort
    type: select
    label: Sort requested from site
    default: created_at
    options:
      created_at: created
      seeders: seeders
      size: size
      name: title
  - name: type
    type: select
    label: Order requested from site
    default: desc
    options:
      desc: desc
      asc: asc

login:
  path: /api/torrents
  method: get
  inputs:
    api_token: "{{ .Config.apikey }}"
  error:
    - selector: a[href*="/login"]

search:
  paths:
    # https://hdinnovations.github.io/UNIT3D-Community-Edition-Docs/api_endpoints.html
    # https://github.com/HDInnovations/UNIT3D-Community-Edition/blob/master/app/Http/Controllers/API/TorrentController.php
    - path: "/api/torrents/filter?api_token={{ .Config.apikey }}&name={{ if .Query.IMDBID }}{{ else }}{{ .Keywords }}{{ end }}{{ if .Query.TMDBID }}&tmdbId={{ .Query.TMDBID }}{{ else }}{{ end }}{{ if .Query.IMDBIDShort }}&imdbId={{ .Query.IMDBIDShort }}{{ else }}{{ end }}{{ if  .Query.TVDBID }}&tvdbId={{ .Query.TVDBID }}{{ else }}{{ end }}&sortField={{ .Config.sort }}&sortDirection={{ .Config.type }}&perPage=100&page=1{{ range .Categories }}&categories[]={{.}}{{end}}{{ if .Config.freeleech }}&free=1{{ else }}{{ end }}"
      response:
        type: json

  rows:
    selector: data
    attribute: attributes
    count:
      selector: meta.total

  fields:
    categorydesc:
      selector: category
    title:
      selector: name
      filters:
        - name: re_replace
          args: ["\\[", " "]
        - name: re_replace
          args: ["\\]", " "]
        - name: re_replace
          args: ["(?i)(full(bluray)?)", "BRDISK"] # FULL(BR/UHD) -> BRDISK
        - name: replace
          args: ["HDOlimpo", ""] # Delete HDOlimpo
        - name: replace
          args: ["HD-Olimpo", ""] # Delete HD-Olimpo
        - name: replace
          args: ["E-AC-3", "EAC3"]
        - name: re_replace
          args: ["[ -](?i)español[ -]", " SPANiSH "]
        - name: re_replace
          args: ["[ -](?i)castellano[ -]", " SPANiSH "]
        - name: re_replace
          args: ["[ -](?i)spa[ -]", " SPANiSH "]
        - name: re_replace
          args: ["[ -](?i)esp[ -]", " SPANiSH "]
        - name: re_replace
          args: [" ES ", " SPANiSH "]
        - name: re_replace
          args: ["[ -](?i)ingl[eé]s[ -]", " English "]
        - name: re_replace
          args: ["[ -](?i)[ei]ng[ -]", " English "]
        - name: re_replace
          args: ["[ -](?i)cat[ -]", " Catalan "]
        - name: re_replace
          args: ["[ -](?i)vas[ -]", " Basque "]
        - name: re_replace
          args: ["[ -](?i)fr[ae][ -]", " French "]
        - name: re_replace
          args: ["[ -](?i)jap[ -]", " Japanese "]
        - name: re_replace
          args: ["[ -](?i)ita[ -]", " Italian "]
        - name: re_replace
          args: ["[ -](?i)rus[ -]", " Russian "]
        - name: re_replace
          args: ["[ -](?i)ger[ -]", " German "]
        - name: re_replace
          args: ["(?i)(triaudio)", "MULTi SPANiSH English"]
        - name: re_replace
          args: ["(?i)(dual)", " MULTi SPANiSH "]
        - name: re_replace
          args: ["(?i)(es-en)", " MULTi SPANiSH "]
        - name: re_replace
          args: ["(?i)(en-es)", " MULTi SPANiSH "]
        - name: re_replace
          args: ["\\.+", "."] # More than 1 dot -> .
        - name: re_replace
          args: ["^\\.", ""] # Delete first dot
        - name: re_replace
          args: ["\\s+", " "] # More than 1 space to 1 space
    details:
      selector: details_link
    download:
      selector: download_link
    poster:
      selector: poster
      filters:
        - name: replace
          args: ["https://via.placeholder.com/90x135", ""]
    imdbid:
      selector: imdb_id
    tmdbid:
      selector: tmdb_id
    tvdbid:
      selector: tvdb_id
    files:
      selector: num_file
    seeders:
      selector: seeders
    leechers:
      selector: leechers
    grabs:
      selector: times_completed
    date:
      # "created_at": "2021-10-18T00:34:50.000000Z" is returned by Newtonsoft.Json.Linq as 18/10/2021 00:34:50
      selector: created_at
      filters:
        - name: append
          args: " +00:00" # GMT
        - name: dateparse
          args: "01/02/2006 15:04:05 -07:00"
    size:
      selector: size
    downloadvolumefactor:
      # api returns 0=false, 1=true
      selector: freeleech
      case:
        0: 1 # not free
        1: 0 # freeleech
    uploadvolumefactor:
      # api returns 0=false, 1=true
      selector: double_upload
      case:
        0: 1 # normal
        1: 2 # double
    minimumseedtime:
      # 4 days (as seconds = 4 x 24 x 60 x 60)
      text: 345600
# json UNIT3D ???
